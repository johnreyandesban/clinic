// src/App.jsx
import React, { useState } from "react";
import {
Â  BrowserRouter as Router,
Â  Routes,
Â  Route,
Â  Navigate,
} from "react-router-dom";

import About from "./frontend/about"; Â  Â  Â  Â // About / Landing Page
import Login from "./frontend/login"; Â  Â  Â  Â // Login Page
import Dashboard from "./frontend/Dashboard"; // Admin Dashboard
import StaffDashboard from "./frontend/StaffDashboard"; // Staff Dashboard
import DoctorDashboard from "./frontend/DoctorDashboard"; // Doctor Dashboard
import NurseDashboard from "./frontend/NurseDashboard"; // Nurse Dashboard

// NOTE: Make sure to import PatientDashboard if you have it!

function App() {
Â  // auth state
Â  const [isAuthenticated, setIsAuthenticated] = useState(
Â  Â  localStorage.getItem("isAuthenticated") === "true"
Â  );

Â  // ðŸ”‘ FIX: Define userId and userRole states
  const [userId, setUserId] = useState(localStorage.getItem("user_id"));
  const [userRole, setUserRole] = useState(localStorage.getItem("user_role"));


Â  // kapag login success
Â  const handleLoginSuccess = () => {
Â  Â  setIsAuthenticated(true);
Â  Â  localStorage.setItem("isAuthenticated", "true");
    
    // ðŸ”‘ FIX: Update state from localStorage after login
    setUserId(localStorage.getItem("user_id"));
    setUserRole(localStorage.getItem("user_role"));
Â  };

Â  // kapag logout
Â  const handleLogout = () => {
Â  Â  setIsAuthenticated(false);
Â  Â  localStorage.removeItem("isAuthenticated");
    
    // ðŸ”‘ FIX: Clear all user data on logout
    localStorage.removeItem("user_id");
    localStorage.removeItem("user_role");
    setUserId(null); 
    setUserRole(null);
Â  };

Â  return (
Â  Â  <Router>
Â  Â  Â  <Routes>
Â  Â  Â  Â  {/* Default route â†’ About page muna */}
Â  Â  Â  Â  <Route path="/" element={<About />} />

Â  Â  Â  Â  {/* Login route */}
Â  Â  Â  Â  <Route
Â  Â  Â  Â  Â  path="/login"
Â  Â  Â  Â  Â  element={<Login onLoginSuccess={handleLoginSuccess} />}
Â  Â  Â  Â  />

Â  Â  Â  Â  {/* Admin Dashboard */}
Â  Â  Â  Â  <Route
Â  Â  Â  Â  Â  path="/dashboard"
Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  isAuthenticated && userRole === 'admin' ? (
Â  Â  Â  Â  Â  Â  Â  <Dashboard onLogout={handleLogout} />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <Navigate to="/login" replace />
Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  />

       
Â  Â  Â  Â  {/* Staff Dashboard */}
Â  Â  Â  Â  <Route
Â  Â  Â  Â  Â  path="/staff-dashboard"
Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  isAuthenticated && userRole === 'staff' ? (
Â  Â  Â  Â  Â  Â  Â  <StaffDashboard onLogout={handleLogout} />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <Navigate to="/login" replace />
Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  />
        
Â  Â  Â  Â  {/* ðŸ”‘ FIX: Doctor Dashboard - Added protection & userId prop */}
Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  path="/doctor-dashboard" 
Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  isAuthenticated && userRole === 'doctor' ? (
Â  Â  Â  Â  Â  Â  Â  <DoctorDashboard onLogout={handleLogout} userId={userId} />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <Navigate to="/login" replace />
Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  />
        
Â  Â  Â  Â  {/* Nurse Dashboard - Added protection & userId prop */}
Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  path="/nurse-dashboard" 
Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  isAuthenticated && userRole === 'nurse' ? (
Â  Â  Â  Â  Â  Â  Â  <NurseDashboard onLogout={handleLogout} userId={userId} />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <Navigate to="/login" replace />
Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  />

        {/* Patient Dashboard (Assumed Protected Route) */}
Â  Â  Â  Â  <Route 
Â  Â  Â  Â  Â  path="/patient-dashboard" 
Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  isAuthenticated && userRole === 'patient' ? (
Â  Â  Â  Â  Â  Â  Â  <NurseDashboard onLogout={handleLogout} userId={userId} /> // Assuming the logic is similar
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <Navigate to="/login" replace />
Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  />


Â  Â  Â  Â  {/* Catch-all â†’ redirect sa About */}
Â  Â  Â  Â  <Route path="*" element={<Navigate to="/" replace />} />
Â  Â  Â  </Routes>
Â  Â  </Router>
Â  );
}

export default App;